- name: "Configure defaults on nodes"
  hosts: all
  gather_facts: yes
  tasks:
    - name: Update System
      become: true
      ansible.builtin.apt:
        autoclean: true
        autoremove: true
        update_cache: true

    - name: Update the hostname
      become: true
      ansible.builtin.hostname:
        name: "{{ ansible_hostname }}"

    - name: Update the /etc/hosts file with node name
      tags: etchostsupdate
      become: true
      lineinfile:
        path: "/etc/hosts"
        regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        line: "{{ hostvars[item]['ansible_env'].SSH_CONNECTION.split(' ')[2] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        state: present
        backup: yes
      register: etchostsupdate
      when: ansible_hostname != item or ansible_hostname == item
      with_items: "{{groups['all']}}"

    # TODO: Use the user module instead of shell here, as its cleaner
    - name: SSH KeyGen command
      shell: >
        ssh-keygen -q -b 2048 -t rsa -N "" -C "creating SSH" -f ~/.ssh/id_rsa
        creates="~/.ssh/id_rsa"

    - name: Fetch the keyfile from the node to master
      tags: run
      ansible.builtin.fetch:
        src: "~/.ssh/id_rsa.pub"
        dest: "/tmp/buffer/{{ansible_hostname}}-id_rsa.pub"
        flat: yes

    - name: Copy the key add to authorized_keys using Ansible module
      tags: runcd
      authorized_key:
        user: leightc
        state: present
        key: "{{ lookup('file','/tmp/buffer/{{item}}-id_rsa.pub') }}"
      when: item != ansible_hostname
      with_items:
        - "{{ groups['all'] }}"

    - name: disable motd noise
      become: true
      ansible.builtin.file:
        recurse: true
        path: /etc/update-motd.d/
        mode: '0644'

    - name: Create mpi user
      become: true
      ansible.builtin.user:
        name: mpiuser
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
      register: mpiuser_create

    - name: Add mpiuser keys across nodes
      become: true
      ansible.posix.authorized_key:
        user: mpiuser
        state: present
        key: "{{ hostvars[item].mpiuser_create.ssh_public_key }}"
      when: item != ansible_hostname
      with_items:
        - "{{ groups['all'] }}"

