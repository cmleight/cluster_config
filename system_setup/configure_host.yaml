- name: "Configure defaults on nodes"
  hosts: all
  tasks:
    - name: Update System
      become: true
      ansible.builtin.apt:
        name: "*"
        autoclean: true
        autoremove: true
        update_cache: true

    - name: Update the hostname
      become: true
      ansible.builtin.hostname:
        name: "{{ ansible_hostname }}"

    - name: Update the /etc/hosts file with node name
      tags: etchostsupdate
      become: true
      lineinfile:
        path: "/etc/hosts"
        regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        line: "{{ hostvars[item]['ansible_env'].SSH_CONNECTION.split(' ')[2] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        state: present
        backup: yes
      register: etchostsupdate
      when: ansible_hostname != item or ansible_hostname == item
      with_items: "{{groups['all']}}"

    - name: disable motd noise
      become: true
      ansible.builtin.file:
        recurse: true
        path: /etc/update-motd.d/
        mode: '0644'

    - name: Create leightc ssh key
      become: true
      ansible.builtin.user:
        name: leightc
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
      register: leightc_ssh_key

    - name: Add leightc keys across nodes
      ansible.posix.authorized_key:
        user: leightc
        state: present
        key: "{{ hostvars[item].leightc_ssh_key.ssh_public_key }}"
      when: item != ansible_hostname
      with_items:
        - "{{ groups['all'] }}"

    - name: Create mpi user
      become: true
      ansible.builtin.user:
        name: mpiuser
        group: sudo
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
      register: mpiuser_create

    - name: Add mpiuser keys across nodes
      become: true
      ansible.posix.authorized_key:
        user: mpiuser
        state: present
        key: "{{ hostvars[item].mpiuser_create.ssh_public_key }}"
      when: item != ansible_hostname
      with_items:
        - "{{ groups['all'] }}"

    - name: Install dependencies
      become: true
      ansible.builtin.apt:
        name:
        - openssh-server
        - nfs-server
        - nfs-client
        - gcc
        - openmpi-bin
        - openmpi-common
        - libopenmpi-dev
        - libgtk2.0-dev

    - name: export NFS
      become: true
      ansible.posix.mount:
        path: /slurp
        src: /dev/mmcblk1
        fstype: nfs
        opts: rw,sync,no_root_squash,no_subtree_check
        state: present
      when: inventory_hostname in groups["manager"]

    - name: import NFS
      become: true
      ansible.posix.mount:
        src: jetson:/slurp
        path: /slurp
        fstype: nfs
        state: mounted
      when: inventory_hostname in groups["worker"]

